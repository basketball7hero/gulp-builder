@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
    $n: index($breakpoint-names, $name);
    @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
    $min: map-get($breakpoints, $name);
    @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
    $next: breakpoint-next($name, $breakpoints);
    @return if($next, breakpoint-min($next, $breakpoints) - 1px, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
    $min: breakpoint-min($name, $breakpoints);
    @if $min {
        @media (min-width: $min) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
    $max: breakpoint-max($name, $breakpoints);
    @if $max {
        @media (max-width: $max) {
            @content;
        }
    } @else {
        @content;
    }
}

@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {
    @include media-breakpoint-up($name, $breakpoints) {
        @include media-breakpoint-down($name, $breakpoints) {
            @content;
        }
    }
}

@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {
    @include media-breakpoint-up($lower, $breakpoints) {
        @include media-breakpoint-down($upper, $breakpoints) {
            @content;
        }
    }
}

@each $bp in map-keys($grid-breakpoints) {

    @include media-breakpoint-up($bp) {

        .hidden-#{$bp}-up {
            display: none !important;
        }
    }

    @include media-breakpoint-down($bp) {

        .hidden-#{$bp}-down {
            display: none !important;
        }
    }

    @include media-breakpoint-only($bp) {

        .hidden-#{$bp}-only {
            display: none !important;
        }
    }

    @include media-breakpoint-only($bp) {

        .pull-#{$bp}-left {
            float: left!important;
        }

        .pull-#{$bp}-right {
            float: right!important;
        }

        .pull-#{$bp}-none {
            float: none !important;
        }

        .pull-#{$bp}-auto {
            float: none!important;
            margin-left: auto;
            margin-right: auto;
        }
    }
}

.visible-print-block {
    display: none !important;

    @media print {
        display: block !important;
    }
}

.visible-print-inline {
    display: none !important;

    @media print {
        display: inline !important;
    }
}

.visible-print-inline-block {
    display: none !important;

    @media print {
        display: inline-block !important;
    }
}

.hidden-print {

    @media print {
        display: none !important;
    }
}